{"version":3,"file":"mwc-tab-bar.js","sourceRoot":"","sources":["src/mwc-tab-bar.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {BaseElement, html, property, observer, query, customElement, Adapter, Foundation} from '@material/mwc-base/base-element.js';\nimport {Tab} from '@material/mwc-tab';\nimport {TabScroller} from '@material/mwc-tab-scroller';\n\n// Make TypeScript not remove the imports.\nimport '@material/mwc-tab';\nimport '@material/mwc-tab-scroller';\n\nimport MDCTabBarFoundation from '@material/tab-bar/foundation';\nimport {style} from './mwc-tab-bar-css';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-tab-bar': TabBar;\n  }\n}\n\nexport interface TabBarFoundation extends Foundation {\n  scrollIntoView(index: number): void;\n  activateTab(index: number): void;\n  handleTabInteraction(e: Event): void;\n  handleKeyDown(e: Event): void;\n}\n\nexport declare var TabBarFoundation: {\n  prototype: TabBarFoundation;\n  new(adapter: Adapter): TabBarFoundation;\n}\n\n@customElement('mwc-tab-bar' as any)\nexport class TabBar extends BaseElement {\n\n  protected mdcFoundation!: TabBarFoundation;\n\n  protected readonly mdcFoundationClass: typeof TabBarFoundation = MDCTabBarFoundation;\n\n  @query('.mdc-tab-bar')\n  protected mdcRoot!: HTMLElement\n\n  @query('mwc-tab-scroller')\n  protected scrollerElement!: TabScroller\n\n  @query('slot')\n  protected tabsSlot!: HTMLSlotElement\n\n  @observer(async function(this: TabBar, value: number) {\n    await this.updateComplete;\n    // only provoke the foundation if we are out of sync with it, i.e.\n    // ignore an foundation generated set.\n    if (value !== this._previousActiveIndex) {\n      this.mdcFoundation.activateTab(value);\n    }\n  })\n  @property({type: Number})\n  activeIndex = 0;\n\n  private _previousActiveIndex = -1;\n\n  private _handleTabInteraction(e: Event) {\n    this.mdcFoundation.handleTabInteraction(e);\n  }\n\n  private _handleKeydown(e: Event) {\n    this.mdcFoundation.handleKeyDown(e);\n  }\n\n  renderStyle() {\n    return style;\n  }\n\n  // TODO(sorvell): can scroller be optional for perf?\n  render() {\n    return html`\n      ${this.renderStyle()}\n      <div class=\"mdc-tab-bar\" role=\"tablist\"\n          @MDCTab:interacted=\"${this._handleTabInteraction}\"\n          @keydown=\"${this._handleKeydown}\">\n        <mwc-tab-scroller><slot></slot></mwc-tab-scroller>\n      </div>\n      `;\n  }\n\n  // TODO(sorvell): probably want to memoize this and use a `slotChange` event\n  private _getTabs() {\n    return this.tabsSlot.assignedNodes({flatten: true}).filter((e: Node) => e instanceof Tab) as Tab[];\n  }\n\n  private _getTab(index) {\n    return this._getTabs()[index];\n  }\n\n  createAdapter() {\n    return {\n      ...super.createAdapter(),\n      scrollTo: (scrollX: number) => this.scrollerElement.scrollToPosition(scrollX),\n      incrementScroll: (scrollXIncrement: number) => this.scrollerElement.incrementScrollPosition(scrollXIncrement),\n      getScrollPosition: () => this.scrollerElement.getScrollPosition(),\n      getScrollContentWidth: () => this.scrollerElement.getScrollContentWidth(),\n      getOffsetWidth: () => this.mdcRoot.offsetWidth,\n      isRTL: () => window.getComputedStyle(this.mdcRoot).getPropertyValue('direction') === 'rtl',\n      setActiveTab: (index: number) => this.mdcFoundation.activateTab(index),\n      activateTabAtIndex: (index: number, clientRect: ClientRect) => {\n        const tab = this._getTab(index);\n        if (tab !== undefined) {\n          tab.activate(clientRect);\n        }\n        this._previousActiveIndex = index;\n      },\n      deactivateTabAtIndex: (index: number) => {\n        const tab = this._getTab(index);\n        if (tab !== undefined) {\n          tab.deactivate()\n        }\n      },\n      focusTabAtIndex: (index: number) => {\n        const tab = this._getTab(index);\n        if (tab !== undefined) {\n          tab.focus();\n        }\n      },\n      // TODO(sorvell): tab may not be able to synchronously answer `computeIndicatorClientRect`\n      // if an update is pending or it has not yet updated. If this is necessary,\n      // LitElement may need a `forceUpdate` method.\n      getTabIndicatorClientRectAtIndex: (index: number) => {\n        const tab = this._getTab(index);\n        return tab !== undefined ? tab.computeIndicatorClientRect() : new DOMRect();\n      },\n      getTabDimensionsAtIndex: (index: number) => {\n        const tab = this._getTab(index);\n        return tab !== undefined ? tab.computeDimensions() :\n            {rootLeft: 0, rootRight: 0, contentLeft: 0, contentRight: 0};\n      },\n      getPreviousActiveTabIndex: () => {\n        return this._previousActiveIndex;\n      },\n      getFocusedTabIndex: () => {\n        const tabElements = this._getTabs();\n        const activeElement = (this as any).getRootNode().activeElement;\n        return tabElements.indexOf(activeElement);\n      },\n      getIndexOfTab: (tabToFind: Tab) => this._getTabs().indexOf(tabToFind),\n      getTabListLength: () => this._getTabs().length,\n      notifyTabActivated: (index: number) => {\n        // Synchronize the tabs `activeIndex` to the foundation.\n        // This is needed when a tab is changed via a click, for example.\n        this.activeIndex = index;\n        this.dispatchEvent(\n          new CustomEvent(MDCTabBarFoundation.strings.TAB_ACTIVATED_EVENT,\n            {detail: {index}, bubbles: true, cancelable: true}))\n      }\n    };\n  }\n\n  // NOTE: Delay creating foundation until scroller is fully updated.\n  // This is necessary because the foundation/adapter synchronously addresses\n  // the scroller element.\n  firstUpdated() {}\n  get updateComplete() {\n    return super.updateComplete\n      .then(() => this.scrollerElement.updateComplete)\n      .then(() => {\n        if (this.mdcFoundation === undefined) {\n          this.createFoundation();\n        }\n      });\n  }\n\n  scrollIndexIntoView(index: number) {\n    this.mdcFoundation.scrollIntoView(index);\n  }\n\n}"]}